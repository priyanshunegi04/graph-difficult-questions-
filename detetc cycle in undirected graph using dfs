class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool detect(int src,int parent,  vector<int>&vis, vector<int>adj[]){
        //tc--->O(n+2e)
        //sc---->O(n)
    vis[src] = 1;       
    for(auto it: adj[src]){
        if(!vis[it]){
            if(detect(it, src, vis, adj))return true;
        }
        else if(parent != it){
            return true;
        }    
    }
    return false;
    }
    
    bool isCycle(int V, vector<int> adj[]) {
    
    vector<int>vis(V, 0);
    for(int i=0; i<V; i++){
        if(!vis[i]){
            if (detect(i,-1,vis, adj))return true;
        }
        
    }
    return false;
    }
